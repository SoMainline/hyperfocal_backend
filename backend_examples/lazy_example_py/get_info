#!/usr/bin/env python3

import sys
import errno
import json
import v4l2
import fcntl
import os

# check if args are correct
if len(sys.argv) != 2:
    sys.exit(-errno.EINVAL)


conf_path = os.path.normpath(
    os.path.join(
        os.path.dirname(__file__), 'config.json'
    )
)

# load internal config
with open(conf_path, 'r') as f:
    data = json.loads(f.read())

# check if the requested device is present
if sys.argv[1] not in data:
    sys.exit(-errno.ENODEV)


# TODO: fix the output format and output meaningful data


with open(data[sys.argv[1]], 'w') as vd:
    cp = v4l2.v4l2_capability()
    fcntl.ioctl(vd, v4l2.VIDIOC_QUERYCAP, cp)
    print(cp.driver)
    print(cp.card)
    print(cp._fields_)

sys.exit(0)
